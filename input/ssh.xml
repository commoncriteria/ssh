<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>

<PP xmlns="https://niap-ccevs.org/cc/v1" name="SSH"
xmlns:h="http://www.w3.org/1999/xhtml" type="package" boilerplate="yes">

<!--
  <PPReference title="PP Reference" id="ID006">
    <ReferenceTable>
      <PPTitle>Extended Package for Secure Shell (SSH)</PPTitle>
      <PPVersion>1.1</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2016-11-25</PPPubDate>
      <PPCertificationID>unassigned</PPCertificationID>
      <CCVersion>Version 3.1R4</CCVersion>
      <Keywords>SSH; secure shell</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership</description>
      </entry>
    </ReferenceTable>
  </PPReference>
-->

  <PPReference>
    <ReferenceTable>
      <PPTitle>Functional Package for Secure Shell (SSH)</PPTitle>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2020-12-14</PPPubDate>
      <Keywords>SSH; secure shell</Keywords>
    </ReferenceTable>
  </PPReference>
  
  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2020-12-14</date>
      <subject>First publication</subject>
    </entry>
  </RevisionHistory>
  
<!-- Introduction    	-->
<!-- 			-->
<chapter title="Introduction" id="int">
	
<!-- Overview		-->
<!--			-->
  <section title="Overview" id="ppoverview">
	    Secure Shell (SSH) is a protocol for secure remote login and other secure network services over
	    an untrusted network. SSH software can act as a client, server, or both.
      	<h:p/>
	  This <h:i>Functional Package for Secure Shell</h:i> (short name "SSH-PKG")
      	defines functional requirements for the implementation of the SSH protocol. The requirements are
      	intended to improve the security of products by enabling their evaluation.
   </section>

<!-- Tech terms		-->
<!--			-->
   <tech-terms>
	   <term abbr="SSH" full="Secure Shell">Cryptographic network protocol for initiating text-based shell sessions
		   on remote systems.</term>
   </tech-terms>
	
<!-- CC Terms 		-->
<!--			-->
        <!-- SME: this table is not rendering the same way as the one above, they should look the same and it's not clear why they don't -->
        <glossary>
          <entry>
            <term>
              <abbr title="Secure Shell">SSH</abbr>
            </term>
            <description>Cryptographic network protocol for initiating text-based shell sessions on remote systems.
            </description>
          </entry>
        </glossary>
    </section>
       
<!-- Compliant Targets of Evaluation	-->
<!--					-->
    <section id="TOEdescription" title="Compliant Targets of Evaluation">
	    The Target of Evaluation (TOE) in this Functional Package is a product which acts as an SSH client, SSH 
	    server, or both. This FP describes the extended security functionality of SSH in terms of 
     	    <cite linkend="bibCC" />. 
      		<h:p/>
     	The contents of this Functional Package must be appropriately combined with a PP or PP-Module. When a PP or PP-Module instantiates this Package, the Package must include 
     	selection-based requirements in accordance with the selections or assignments indicated in the PP or PP-Module.
      <h:p/>
        The PP or PP-Module that instantiates this Package must typically include the following components in order to satisfy dependencies of this Package. 
        It is the responsibility of the PP or PP-Module author who instantiates this Package to ensure that dependence on these components is satisfied, either by the TOE or by assumptions about its Operational Environment.
      <h:p/>
      <!-- SME: this table is not display properly (see its counterpart in the TLS Package for an example of what we were expecting -->
      <componentsneeded>
        <componentneeded>
          <componentid>FCS_CKM.1</componentid>
          <notes>To support key generation for SSH, the PP or PP-Module must
            include FCS_CKM.1 and specify the corresponding algorithm.</notes>
        </componentneeded>
        <componentneeded>
          <componentid>FCS_CKM.2</componentid>
          <notes>To support key establishment for SSH, the PP or PP-Module must
            include FCS_CKM.2 and specify the corresponding algorithm.</notes>
        </componentneeded>
        <componentneeded>
          <componentid>FCS_COP.1</componentid>
          <notes>
            To support the cryptography needed for SSH communications, the PP or PP-Module must include FCS_COP.1 (iterating as needed)
		  to specify AES with corresponding key sizes and modes, digital signature generation and verification function 
		  (at least one of RSA or ECDSA), a cryptographic hash function, and a keyed-hash message authentication function.
          </notes>
        </componentneeded>
        <!-- The components in the PP or PP-Module that need this SFR should require it;
      it is not _directly_ depended upon by this Package.-->
        <componentneeded>
          <componentid>FCS_RBG_EXT.1</componentid>
          <notes>To support random bit generation needed for SSH key generation,
            the PP or PP-Module must include a requirement that specifies the TOE's ability to invoke or provide random bit generation services, commonly identified as 
            FCS_RBG_EXT.1.</notes>
        </componentneeded>
        <componentneeded>
          <componentid>FIA_X509_EXT.1</componentid>
          <notes>
            To support establishment of SSH communications using a public key algorithm that includes X.509, 
            the PP or PP-Module must include FIA_X509_EXT.1. Note however that support for X.509 is selectable and not mandatory.
          </notes>
        </componentneeded>
        <componentneeded>
          <componentid>FIA_X509_EXT.2</componentid>
          <notes>
            To support establishment of SSH communications using a public key algorithm that includes X.509, 
            the PP or PP-Module must include FIA_X509_EXT.2. Note however that support for X.509 is selectable and not mandatory.
          </notes>
        </componentneeded>
        <componentneeded>
          <componentid>FPT_STM.1</componentid>
          <notes>
            To support establishment of SSH communications using a public key algorithm that includes X.509, 
            the PP or PP-Module must include FPT_STM.1 or some other requirement that ensures reliable system time.  
            Note however that support for time-based rekey thresholds is selectable and not mandatory.
          </notes>
        </componentneeded>
      </componentsneeded>
      <h:p/>
      An ST must identify the applicable version of the <abbr linkend="PP"/> or
      <abbr linkend="PP-Module"/> and this
      Package in its conformance claims.
    </section>
  </chapter>
  
  <chapter title="Conformance Claims" id="conf">
    <cclaims>
      <!-- SME: the TLS package also uses the cclaim id="Conformance Statement" but in that 
	package, the actual text "Conformance Statement" doesn't get displayed, which is what
      	we would expect should be happening here as well (it shows up right underneath the 
	"Conformance Claimes" section header so it is redundant to display both the title and the
 	almost-identical subtitle -->
      <cclaim id="Conformance Statement">
        <description>This Package serves to provide Protection Profiles with additional 
          SFRs and associated Evaluation Activities specific to SSH clients and servers.  
          <h:p/>
          This Package conforms to Common Criteria
          <cite linkend="bibCC" /> for Information Technology Security Evaluation, Version 3.1,
          Revision 5. It is CC Part 2 extended conformant.
          <h:p/>
          In accordance with CC Part 1, dependencies are not included when they are addressed
          by other SFRs. The evaluation activities provide adequate proof that any dependencies are
          also satisfied.</description>
      </cclaim>
    </cclaims>
  </chapter>

 
  <chapter title="Security Requirements" id="req">This chapter describes the security requirements
  to be fulfilled by the product. Those requirements comprise functional components from Part 2 of 
  <cite linkend="bibCC" />. The following notations are used: 
    <h:ul>
      <h:li>
        <h:b>Refinement</h:b> operation (denoted by <h:b>bold text</h:b>): Used to add details to a
        requirement, and thus further restricts a requirement.</h:li>
      <h:li>
        <h:b>Selection</h:b> operation (denoted by <h:i>italicized text</h:i>): Used to select one or more options
        provided by the <cite linkend="bibCC" /> in stating a requirement. Selections are also enclosed in square brackets.</h:li>
      <h:li>
        <h:b>Assignment</h:b> operation (denoted by <h:span class="assignable-content">italicized text</h:span>): Used to assign a
        specific value to an unspecified parameter, such as the length of a password. Assignments are also enclosed in square brackets.</h:li>
      <h:li>
        <h:b>Iteration</h:b> operation: Identified with a slash followed by a unique text string (e.g.
        "/SSH").</h:li>
    </h:ul>
	  
  <section title="Security Functional Requirements" id="sfr">
	  The SFRs included in this section are derived from Part 2 of the Common Criteria for Information
  	Technology Security Evaluation, Version 3.1, Revision 5, with additional extended functional
  	components. 
  <subsection title="Cryptographic Support (FCS)" id="fcs">
<!-- 
	I don't understand why AES-CTR seems to be required here. According to the RFC, the only required
	crypto-algorithm is 3DES-CBC--and we're certainly not supporting that.

	Anyway, this FP can include only SSH  
-->
<!--
    <f-component id="fcs_cop.1/SSH" name="Cryptographic Operation (AES-CTR Encryption/Decryption for SSH)">
      <f-element id="fcs_cop.1.1/SSH">
        <title>The <h:b>SSH software shall <selectables>
          <selectable>perform</selectable>
          <selectable>invoke-platform-provided</selectable>
        </selectables></h:b> [<h:i>encryption/decryption services for data</h:i>] in accordance
          with a specified cryptographic algorithm [<h:i>AES-CTR (as defined in NIST SP 800-38A)
            mode</h:i>] and cryptographic key sizes [<h:i>128-bit, 256-bit</h:i>].
        </title>
-->
        <!-- SME: note that the key size here was previously a selection but FCS_SSHC_EXT.1.3 and FCS_SSHS_EXT.1.3 both mandate support
 	for both aes128-ctr and aes256-ctr so there is no situation where a TOE could legitimately
        only claim one of these --> 
<!--         
        <note role="application">This Package may be used for a TOE that conforms to a PP that permits the TOE's use of platform
		cryptography (such as the Protection Profile for Application Software). In this case, the TOE may rely on its 
		platform to provide the cryptographic functionality used to support the TOE's SSH function. If the SSH software does 
		provide its own cryptography, the ST should indicate which cryptographic SFRs from its claimed PP are used to implement
		SSH functionality.
        </note>
-->
        <!-- SME: for all cases where we used the TSS/Guidance/Tests tags under aactivity, those headings are not showing up in the evaluation activities, as they do with the TLS Package -->
<!--	
        <aactivity>
          <TSS>
          The evaluator shall examine the TSS to verify that it describes whether the TSF or TOE platform is responsible for the implementation of  
          the cryptographic functionality needed to support SSH communications.
          <h:p/>
          If "perform" is selected, the evaluator shall verify that the TSS describes the counter mechanism including rationale that the counter values provided are unique.
          </TSS>
          <Guidance>
          There are no guidance evaluation activities for this component.
          </Guidance>
          <Tests>
          If "perform" is selected, the evaluator shall perform the following tests:
          <testlist>
            <test>
              Known Answer Tests (KATs)
              <h:p/>
              There are four Known Answer Tests (KATs) described below.  For all KATs, the plaintext,
              initialization vector (IV), and ciphertext values shall be 128-bit blocks.  The results from each test may
              either be obtained by the validator directly or by supplying the inputs to the implementer
              and receiving the results in response.  To determine correctness, the evaluator shall
              compare the resulting values to those obtained by submitting the same inputs to a known
              good implementation.
              <h:p/>
              <h:b>Test 1a:</h:b> To test the encrypt functionality, the evaluator shall supply a set of 10 plaintext 
              values and obtain the ciphertext value that results from encryption of the given plaintext
              using a key value of all zeros and an IV of all zeros.  Five plaintext values shall be encrypted
              with a 128-bit all zeros key, and the other five shall be encrypted with a 256-bit all zeros key. 
              To test the decrypt functionality, the evaluator shall perform the same 
              test as for encrypt, using 10 ciphertext values as input.
              <h:p/>
              <h:b>Test 1b:</h:b> To test the encrypt functionality, the evaluator shall supply a set of 10 key values
              and obtain the ciphertext value that results from encryption of an all zeros plaintext
              using the given key value and an IV of all zeros.  Five of the key values shall be 128-bit
              keys, and the other five shall be 256-bit keys. To test the decrypt functionality, the
              evaluator shall perform the same test as for encrypt, using an all zero ciphertext
              value as input.
              <h:p/>
              <h:b>Test 1c:</h:b> To test the encrypt functionality, the evaluator shall supply the two sets of key values
              described below and obtain the ciphertext values that result from AES encryption of an
              all zeros plaintext using the given key values and an IV of all zeros.  The first set of
              keys shall have 128 128-bit keys, and the second shall have 256 256-bit keys.  Key_i in
              each set shall have the leftmost i bits be ones and the rightmost N-i bits be zeros,
              for i in [1, N]. To test the decrypt functionality, the evaluator shall supply the two
              sets of key and ciphertext value pairs described below and obtain the plaintext value
              that results from decryption of the given ciphertext using the given key values and an
              IV of all zeros.  The first set of key/ciphertext pairs shall have 128 128-bit
              key/ciphertext pairs, and the second set of key/ciphertext pairs shall have 256 256-bit
              pairs. Key_i in each set shall have the leftmost i bits be ones and the rightmost N-i
              bits be zeros for i in [1, N].  The ciphertext value in each pair shall be the value 
              that results in an all zeros plaintext when decrypted with its corresponding key.
              <h:p/>
              <h:b>Test 1d:</h:b> To test the encrypt functionality, the evaluator shall supply the set of
              128 plaintext values described below and obtain the two ciphertext values that
              result from encryption of the given plaintext using a 128-bit key value of all
              zeros and using a 256 bit key value of all zeros, respectively, and an IV of all
              zeros. Plaintext value i in each set shall have the leftmost bits be ones and
              the rightmost 128-i bits be zeros, for i in [1, 128].  To test the decrypt functionality,
              the evaluator shall perform the same test as for encrypt, using ciphertext
              values of the same form as the plaintext in the encrypt test as input.
              <h:p/>
            </test>
            <test>
              Multi-Block Message Test
              <h:p/>
              The evaluator shall test the encrypt functionality by encrypting an i-block 
              message where 1 less-than i less-than-or-equal to 10. For each i the evaluator 
              shall choose a key, IV, and plaintext message of length i blocks and encrypt
              the message, using the mode to be tested, with the chosen key. The ciphertext
              shall be compared to the result of encrypting the same plaintext message with
              the same key and IV using a known good implementation. The evaluator shall also 
              test the decrypt functionality by decrypting an i-block message where 1 less-than
              i less-than-or-equal to 10. For each i the evaluator shall choose a key and
              a ciphertext message of length i blocks and decrypt the message, using the mode 
              to be tested, with the chosen key. The plaintext shall be compared to the result
              of decrypting the same ciphertext message with the same key using a known good implementation.
              <h:p/>
            </test>
            <test>
              Monte-Carlo Test
              <h:p/>
              For AES-CTR mode perform the Monte Carlo Test for ECB Mode on the encryption 
              engine of the counter mode implementation. There is no need to test the decryption engine.
              <h:p/>
              The evaluator shall test the encrypt functionality using 200 plaintext/key pairs. 
              100 of these shall use 128 bit keys, and 100 of these shall use 256 bit keys.  
              The plaintext values shall be 128-bit blocks.  For each pair, 1000 iterations shall be run as follows:
              <h:p/>
              For AES-ECB mode<h:br />
              # Input: PT, Key<h:br />
              for i = 1 to 1000:<h:br />
              CT[i] = AES-ECB-Encrypt(Key, PT)<h:br />
              PT = CT[i]
              <h:p/>
              The ciphertext computed in the 1000th iteration is the result for that 
              trial.  This result shall be compared to the result of running 1000 
              iterations with the same values using a known good implementation.  
            </test>
          </testlist>
            If "invoke platform-provided" is selected, the evaluator confirms that SSH connections are only successful if appropriate algorithms and appropriate key sizes are configured. To do this, the evaluator shall perform the following tests:
            <testlist>
              <test>
                [Conditional: TOE is an SSH server] The evaluator shall configure an SSH client to connect with an invalid cryptographic algorithm and key size for each listening SSH socket connection on the TOE.  
                The evaluator initiates SSH client connections to each listening SSH socket connection on the TOE and observes that the connection fails in each attempt.
              </test>
            <test>
              [Conditional: TOE is an SSH client] The evaluator shall configure a listening SSH socket on a remote SSH server that accepts only invalid cryptographic algorithms and keys. 
              The evaluator uses the TOE to attempt an SSH connection to this server and observes that the connection fails.  
            </test>
            </testlist>
            </Tests>
        </aactivity>
      </f-element>
    </f-component>
-->
	
    <f-component cc-id="fcs_ssh_ext.1" name="SSH Protocol">
	<f-element id="fcs-ssh-ext-1e1">
        <title>The SSH software shall implement the SSH protocol that complies with RFCs 4251, 4252, 4253,
        4254 and 
        <selectables>
          <selectable>5647</selectable>
          <selectable>5656</selectable>
          <selectable>6187</selectable>
          <selectable>6668</selectable>
          <selectable>8332</selectable>
          <selectable>no other RFCs</selectable>
        </selectables> as a 
		<selectables>
		  <selectable id="ssh-client">client</selectable>
		  <selectable id="ssh-server">server</selectable>
		</selectables>.
		</title>
        <note role="application">
		The ST author selects which of the additional RFCs to which
        	conformance is being claimed. An SSH product can implement additional RFCs, but only those
        	listed in the selection can be claimed as conformant under CC. 
        	The RFC selections for this requirement need to be consistent with selections in
        	later elements of this Functional Package (e.g., cryptographic algorithms permitted). 
        <h:p/>
        	RFC 4253 indicates that certain cryptographic algorithms are "REQUIRED." This means that from the 
        	Internet Engineering Task Force's (IETF's) perspective the implementation must include support, not that the algorithms must 
        	be enabled for use. For the purposes of this SFR's evaluation activity and this Functional Package
        	overall, it is not necessary to ensure that algorithms listed as "REQUIRED" by the RFC 
        	but not listed in later elements of this Functional Package are actually implemented.
        <h:p/>
         	RFC 5647 applies when AEAD_AES_128_GCM or AEAD_AES_256_GCM is selected as an encryption algorithm in
		FCS_SSHC_EXT.1.3 or FCS_SSHS_EXT.1.3 and as a MAC algorithm in FCS_SSHC_EXT.1.5 or FCS_SSHS_EXT.1.5. 
          <h:p/>
          	RFC 5656 applies when ecdsa-sha2-nistp256 or ecdsa-sha2-nistp384 is selected as a public key algorithm
		in FCS_SSHC_EXT.1.4 or FCS_SSHS_EXT.1.4, or when ecdh-sha2-nistp256, ecdh-sha2-nistp384, or 
		ecdh-sha2-nistp521 is selected as a key exchange algorithm in FCS_SSHC_EXT.1.6 or FCS_SSHS_EXT.1.6.
          <h:p/>
          	RFC 6187 applies when x509v3-ecdsa-sha2-nistp256 or x509v3-ecdsa-sha2-nistp384 is selected as a public key 
		algorithm in FCS_SSHC_EXT.1.4 or FCS_SSHS_EXT.1.4.
          <h:p/>
          	RFC 6668 applies when hmac-sha2-256 or hmac-sha2-512 is selected as a MAC algorithm in FCS_SSHC_EXT.1.5 or
		FCS_SSHS_EXT.1.5.
          <h:p/>
          	RFC 8332 applies when rsa-sha2-256 or rsa-sha2-512 is selected as a public key algorithm in
		FCS_SSHC_EXT.1.4 or FCS_SSHS_EXT.1.4.
          <h:p/>
        	If "client" is selected, then the ST must include the requirements from
		<linkref linkend="FCS_SSHC_EXT.1" />.
        <h:p/>
        	If "server" is selected, then the ST must include the requirements from 
		<linkref linkend="FCS_SSHS_EXT.1" />.
	</note>
        <aactivity>
          <TSS>
		The evaluator shall ensure that the selections indicated in the ST are 
		consistent with selections in the dependent components.
          </TSS>
          <Guidance>
          	There are no guidance evaluation activities for this component.
          </Guidance>
          <Tests>
          	There are no test evaluation activities for this component.
          </Tests>
        </aactivity>
      </f-element>
	<audit-event />
      </f-component>

      <f-component cc-id="fcs_sshc_ext.1" name="SSH Protocol - Client" status="sel-based">
      <selection-depends req="fcs-ssh-ext-1e1" ids="ssh-client"/>
       
      <f-element id="fcs-sshc-ext-1e1">
        <title>The SSH client shall ensure that the SSH protocol implementation supports the following
        authentication methods as described in RFC 4252: public key-based and
          <selectables>
            <selectable>password-based</selectable>
            <selectable>no other method</selectable>
          </selectables>.
        </title>
        <aactivity>
        <TSS>
	        The evaluator shall check to ensure that the TSS contains a description of the
        	public key algorithms that are acceptable for use for authentication and that this list
        	conforms to <linkref linkend="FCS_SSHC_EXT.1.4" />. The evaluator shall also ensure that 
		password-based authentication methods are described, if supported.
        </TSS>
          <Guidance>
            If the SSH client supports password-based authentication, the evaluator shall examine the guidance to determine
		  that it includes instructions on how to configure whether the TSF uses password-based or public key-based
		  authentication.
          </Guidance>
          <Tests>
        <testlist>
          <test>The evaluator shall, for each public key algorithm supported, show that the TOE
          supports the use of that public key algorithm to authenticate a user connection to an SSH
          server. Any configuration activities required to support this test shall be performed
          according to instructions in the guidance documentation.</test>
          <test>[Conditional: TOE supports password-based authentication] Using the guidance documentation, the evaluator shall configure the TOE to perform
          password-based authentication to an SSH server, and demonstrate that a user can be
          successfully authenticated by the TOE to an SSH server using a password as an
          authenticator.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshc-ext-1e2">
        <title>The SSH client shall ensure that, as described in RFC 4253, packets greater than 
        <assignable>number of bytes</assignable> bytes in an SSH transport connection are
        dropped.</title>
        <note role="application">
		RFC 4253 provides for the acceptance of “large packets” with the
        	caveat that the packets should be of “reasonable length” or dropped. The assignment should
        	be filled in by the ST author with the maximum packet size accepted, thus defining
        	“reasonable length” for the TOE.
	      </note>
        <aactivity>
          <TSS>
            The evaluator shall check that the TSS describes how “large packets” in terms of RFC 4253 are detected and handled.
          </TSS>
          <Guidance>
            There are no guidance evaluation activities for this element.
          </Guidance>
          <Tests>
            <testlist>
              The evaluator shall perform the following test:
              <test>
                The evaluator shall demonstrate that if the TOE receives a packet larger than that
                specified in this element, the packet is dropped.
              </test>
            </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshc-ext-1e3">
        <title>The SSH client shall ensure that the SSH transport implementation uses the following
        encryption algorithms and rejects all other encryption algorithms: aes128-ctr, aes256-ctr, 
        <selectables>
          <selectable>aes128-cbc</selectable>
          <selectable>aes256-cbc</selectable>
          <selectable>AEAD_AES_128_GCM</selectable>
          <selectable>AEAD_AES_256_GCM</selectable>
          <selectable>no other algorithms</selectable>
        </selectables>.
        </title>
        <note role="application">RFC 5647 specifies the use of the AEAD_AES_128_GCM and
        AEAD_AES_256_GCM algorithms in SSH. As described in RFC 5647, AEAD_AES_128_GCM and
        AEAD_AES_256_GCM can only be chosen as encryption algorithms when the same algorithm is
        being used as the MAC algorithm.
        If AES-GCM is selected,
        there should be corresponding FCS_COP entries in the ST.</note>
        <aactivity>
          <TSS>
          The evaluator shall check the description of the implementation of this protocol
        in the TSS to ensure that it specifies the supported encryption algorithms and any optional characteristics. 
        The evaluator shall also check the TSS to ensure that
        the encryption algorithms specified are identical to those listed for this element. 
          </TSS>
        <Guidance>The evaluator shall check the guidance documentation to ensure that it contains
        instructions on configuring the TOE so that SSH conforms to the description in the TSS (for
        instance, the set of algorithms advertised by the TOE may have to be restricted to meet the
        requirements). 
        </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>The evaluator shall establish an SSH connection using each of the encryption
          algorithms specified by the requirement. It is sufficient to observe (on the wire) the
          successful negotiation of the algorithm to satisfy the intent of this test.</test>
          <test>The evaluator shall configure an SSH server to only allow the 3des-cbc encryption
          algorithm and no other encryption algorithms. The evaluator shall attempt to establish an
          SSH connection from the TOE to the SSH server and observe that the connection is
          rejected.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
        
        <!-- SME: the NDcPP also defines aes128-gcm@openssh.com and aes256-gcm@openssh.com for FCS_SSHC_EXT.1.4 and 
	FCS_SSHS_EXT.1.4. Should those be added to this Package as well? If so, the selection "implicit" must also be
 	added to FCS_SSHC_EXT.1.6 and FCS_SSHS_EXT.1.6 -->
      <f-element id="fcs-sshc-ext-1e4">
        <title>The SSH client shall ensure that the SSH transport implementation uses 
        <selectables>
          <selectable>ssh-rsa</selectable>
          <selectable>rsa-sha2-256</selectable>
          <selectable>rsa-sha2-512</selectable>
          <selectable>ecdsa-sha2-nistp256</selectable>
        </selectables> and 
        <selectables>
          <selectable>ecdsa-sha2-nistp384</selectable>
          <selectable>x509v3-ecdsa-sha2-nistp256</selectable>
          <selectable>x509v3-ecdsa-sha2-nistp384</selectable>
          <selectable>no other public key algorithms</selectable>
        </selectables> as its public key algorithm(s) and rejects all other public key
        algorithms.</title>
        <note role="application">Implementations that select only ssh-rsa will not achieve the
        112-bit security strength in the digital signature generation for SSH authentication as is
        recommended in NIST SP 800-131A. 
        
        <!-- SME: should this statement be kept as-is, withdrawn, or incorporated into the SFR? -->
        Future versions of this document may remove ssh-rsa as a
        selection. 
        
        If "x509v3-ecdsa-sha2-nistp256" or "x509v3-ecdsa-sha2-nistp384" are selected, then
        the list of trusted certification authorities must be selected in 
        <linkref linkend="FCS_SSHC_EXT.1.8" />. RFC 8332 specifies the use of rsa-sha2-256 or rsa-sha2-512 in SSH.
        <h:p/>
        The SFRs for cryptographic key generation and certificate validation are inherited
        from the PP or PP-Module that includes this Package.
        </note>
        <aactivity>
          <TSS>
            The evaluator shall check the description of the implementation of this protocol
            in the TSS to ensure that it specifies the supported public key algorithms and any optional characteristics. 
            The evaluator shall also check the TSS to ensure that
            the encryption algorithms specified are identical to those listed for this element. 
          </TSS>
          <Guidance>The evaluator shall check the guidance documentation to ensure that it contains
        instructions on configuring the TOE so that SSH conforms to the description in the TSS (for
        instance, the set of algorithms advertised by the TOE may have to be restricted to meet the
        requirements). 
          </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>The evaluator shall establish a SSH connection using each of the public key
          algorithms specified by the requirement to authenticate an SSH server to the TOE. It is
          sufficient to observe (on the wire) the successful negotiation of the algorithm to
          satisfy the intent of the test.</test>
          <test>The evaluator shall configure an SSH server to only allow the ssh-dsa public key
          algorithm and no other public key algorithms. The evaluator shall attempt to establish an
          SSH connection from the TOE to the SSH server and observe that the connection is
          rejected.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshc-ext-1e5">
        <title>The SSH client shall ensure that the SSH transport implementation uses 
        <selectables>
          <selectable>hmac-sha1</selectable>
          <selectable>hmac-sha1-96</selectable>
          <selectable>hmac-sha2-256</selectable>
          <selectable>hmac-sha2-512</selectable>
        </selectables> and 
        <selectables>
          <selectable>AEAD_AES_128_GCM</selectable>
          <selectable>AEAD_AES_256_GCM</selectable>
          <selectable>no other MAC algorithms</selectable>
        </selectables> as its data integrity MAC algorithm(s) and rejects all other MAC
        algorithm(s).</title>
        <note role="application">RFC 5647 specifies the use of the AEAD_AES_128_GCM and
        AEAD_AES_256_GCM algorithms in SSH. As described in RFC 5647, AEAD_AES_128_GCM and
        AEAD_AES_256_GCM can only be chosen as MAC algorithms when the same algorithm is being used
        as the encryption algorithm. RFC 6668 specifies the use of the sha2 algorithms in
        SSH.
        <h:p/>
        The SFRs for cryptographic operations, encryption, and hashing are inherited from  
        the PP or PP-Module that includes this Package.
        </note>
        <aactivity>
          <TSS>
          The evaluator shall check the TSS to ensure that it lists the supported data
        integrity algorithms and that this list corresponds to the list in this element. 
          </TSS>
          <Guidance>The evaluator shall check the guidance documentation to ensure that it includes
        instructions to the administrator on how to ensure that only the allowed data integrity
        algorithms are used in SSH connections with the TOE (specifically, that the “none” MAC
        algorithm is not allowed). 
          </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>The evaluator shall establish a SSH connection using each of the integrity
          algorithms specified by the requirement. It is sufficient to observe (on the wire) the
          successful negotiation of the algorithm to satisfy the intent of this test.</test>
          <test>The evaluator shall configure an SSH server to only allow the “none” MAC algorithm.
          The evaluator shall attempt to connect from the TOE to the SSH server and observe that the
          attempt fails.</test>
          <test>The evaluator shall configure an SSH server to only allow the hmac-md5 MAC
          algorithm. The evaluator shall attempt to connect from the TOE to the SSH server and
          observe that the attempt fails.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshc-ext-1e6">
        <title>The SSH client shall ensure that 
          <selectables>
            <selectable>diffie-hellman-group14-sha1</selectable>
            <selectable>ecdh-sha2-nistp256</selectable>
          </selectables>
          and
          <selectables>
            <selectable>ecdh-sha2-nistp384</selectable>
            <selectable>ecdh-sha2-nistp521</selectable>
            <selectable>no other methods</selectable>
          </selectables>
        are the only allowed key exchange methods used for the SSH protocol.</title>
        <aactivity>
          <TSS>
          The evaluator shall check the TSS to ensure that it lists the supported key
        exchange algorithms and that this list corresponds to the list in this element. 
          </TSS>
          <Guidance>
          The evaluator shall check the guidance documentation to ensure that it includes
        instructions to the administrator on how to ensure that only the allowed key exchange
        algorithms are used in SSH connections with the TOE. 
          </Guidance>
          <Tests>
            The evaluator shall perform the following test:
        <testlist>
          <test>The evaluator shall configure an SSH server to permit all allowed key exchange
          methods. The evaluator shall then attempt to connect from the TOE to the SSH server using each
          allowed key exchange method and observe that each attempt succeeds.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshc-ext-1e7">
        <title>The SSH client shall ensure that the SSH connection be rekeyed after 
          <selectables>
            <selectable>no more than 2<h:sup>28</h:sup> packets have been transmitted</selectable>
            <selectable>no more than 1 gigabyte of data has been transmitted</selectable>
            <selectable>no more than 1 hour</selectable>
          </selectables>
          using that key.</title>
        <aactivity>
          <TSS>
            There are no TSS evaluation activities for this element.
          </TSS>
          <Guidance>
            There are no guidance evaluation activities for this element.
          </Guidance>
          <Tests>
            The evaluator shall perform the following test for each rekeying method claimed in the ST:
          <testlist>
            The evaluator shall perform the following test:
            <test>The evaluator shall configure the TOE to create a log entry when a rekey occurs. The evaluator shall then use the TOE to connect to an SSH server and cause a rekey to occur according to the selection(s) in the ST.
            The evaluator shall subsequently use available methods and tools to verify that rekeying occurs. This could be done by, for example, checking that a corresponding audit event has been generated by the TOE or by the SSH server, if
            either supports auditing of rekey events.
            </test>
          </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshc-ext-1e8">
          <title>The SSH client shall ensure that the SSH client authenticates the identity of the SSH server
            using a local database associating each host name with its corresponding public key or 
            <selectables>
              <selectable>a list of trusted certification authorities</selectable>
              <selectable>no other methods</selectable>
            </selectables> as described in RFC 4251 section 4.1.</title>
          <note role="application"> The selection for "a list of trusted certification authorities" can only be chosen
            if "x509v3-ecdsa-sha2-nistp256" or "x509v3-ecdsa-sha2-nistp384" are selected in 
            <linkref linkend="FCS_SSHC_EXT.1.4" />.</note>
          <aactivity>
            <TSS>
              There are no TSS evaluation activities for this element.
            </TSS>
            <Guidance>
              There are no guidance evaluation activities for this element.
            </Guidance>
            <Tests>
              The evaluator shall perform the following tests: 
            <testlist>
              <test>The evaluator shall delete all entries in the TOE’s list of recognized SSH server
                host keys and, if selected, all entries in the TOE’s list of trusted certification
                authorities. The evaluator shall then initiate a connection from the TOE to an SSH server.
                The evaluator shall ensure that the TOE either rejects the connection or displays the
                SSH server’s public key (either the key bytes themselves or a hash of the key using any
                allowed hash algorithm) and prompts the user to accept or deny the key before
                continuing the connection.</test>
              <test>The evaluator shall add an entry associating a host name with a public key into
                the TOE’s local database. The evaluator shall then replace, on the corresponding SSH server,
                the server’s host key with a different host key. The evaluator shall initiate a
                connection from the TOE to the SSH server using password-based authentication, shall
                ensure that the TOE rejects the connection, and shall ensure that the password was not
                transmitted to the SSH server (for example, by instrumenting the SSH server with a
                debugging capability to output received passwords).</test>
            </testlist>
              </Tests>
          </aactivity>
       </f-element>
       <audit-event />
      </f-component>

    <f-component cc-id="fcs_sshs_ext.1" name="SSH Protocol - Server" status="sel-based">
      <selection-depends req="fcs-ssh-ext-1e1" ids="ssh-server"/>
      
      <f-element id="fcs-sshs-ext-1e1"> 
        <title>The SSH server shall ensure that the SSH protocol implementation supports the following
        authentication methods as described in RFC 4252: public key-based and
          <selectables>
            <selectable>password-based</selectable>
            <selectable>no other method</selectable>
          </selectables>.
        </title>
        <aactivity>
          <TSS>
          The evaluator shall check to ensure that the TSS contains a description of the
        public key algorithms that are acceptable for use for authentication and that this list
        conforms to 
        <linkref linkend="FCS_SSHS_EXT.1.4" />. The evaluator shall also ensure that password-based authentication
        methods are described, if supported.
          </TSS>
          <Guidance>
            If the SSH server supports password-based authentication, the evaluator shall examine the guidance to determine that it includes instructions on how to configure whether the TSF uses password-based or public key-based authentication.
          </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>The evaluator shall, for each public key algorithm supported, show that the TOE
          supports the use of that public key algorithm to authenticate a user connection from an
          SSH client. Any configuration activities required to support this test shall be performed
          according to instructions in the guidance documentation.</test>
          <test>
          The evaluator shall choose one public key algorithm supported by the
          TOE. The evaluator shall generate a new key pair for that algorithm without
          configuring the TOE to recognize the public key for authentication. The
          evaluator shall use an SSH client to attempt to connect to the TOE with the
          new key pair and demonstrate that authentication fails.
          </test>
          <test>[Conditional: TOE supports password-based authentication] Using the guidance documentation, the evaluator shall configure the TOE to perform
          password-based authentication on a client and demonstrate that a user can be
          successfully authenticated by the TOE using a password as an authenticator.</test>
          <test>
            [Conditional: TOE supports password-based authentication] The evaluator shall use an SSH client to enter an incorrect password to
            attempt to authenticate to the TOE and demonstrate that the authentication
            fails.
          </test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshs-ext-1e2">
        <title>The SSH server shall ensure that, as described in RFC 4253, packets greater than 
        <assignable>number of bytes</assignable> bytes in an SSH transport connection are
        dropped.</title>
        <note role="application">RFC 4253 provides for the acceptance of “large packets” with the
        caveat that the packets should be of “reasonable length” or dropped. The assignment should
        be filled in by the ST author with the maximum packet size accepted, thus defining
        “reasonable length” for the TOE.</note>
        <aactivity>
          <TSS>The evaluator shall check that the TSS describes how “large packets” in terms of
        RFC 4253 are detected and handled.
          </TSS>
          <Guidance>
            There are no guidance evaluation activities for this element.
          </Guidance>
          <Tests>
        <testlist>
          The evaluator shall perform the following test:
          <test>
        The evaluator shall demonstrate that if the TOE receives a packet larger than that
        specified in this element, the packet is dropped.
          </test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshs-ext-1e3">
        <title>The SSH server shall ensure that the SSH transport implementation uses the following
          encryption algorithms and rejects all other encryption algorithms: aes128-ctr, 
          aes256-ctr, <selectables>
            <selectable>aes128-cbc</selectable>
            <selectable>aes256-cbc</selectable>
            <selectable>AEAD_AES_128_GCM</selectable>
            <selectable>AEAD_AES_256_GCM</selectable>
            <selectable>no other algorithms</selectable>
          </selectables>.
        </title>
        <note role="application">
          RFC 5647 specifies the use of the AEAD_AES_128_GCM and AEAD_AES_256_GCM
          algorithms in SSH. As described in RFC 5647, AEAD_AES_128_GCM and
          AEAD_AES_256_GCM can only be chosen as encryption algorithms when the same
          algorithm is being used as the MAC algorithm.
        </note>
        <aactivity>
          <TSS>
 The evaluator shall check the description of the implementation of this protocol
        in the TSS to ensure that it specifies the supported encryption algorithms and any optional characteristics. 
        The evaluator shall also check the TSS to ensure that
        the encryption algorithms specified are identical to those listed for this element.
          </TSS>
          <Guidance>
            The evaluator shall check the guidance documentation to ensure that it contains
            instructions on configuring the TOE so that SSH conforms to the description in the TSS (for
            instance, the set of algorithms advertised by the TOE may have to be restricted to meet the
            requirements). 
          </Guidance>
        <Tests>
          The evaluator shall perform the following tests:
        <testlist>
          <test>The evaluator shall initiate an SSH connection using each of the encryption
          algorithms specified by the requirement. It is sufficient to observe (on the wire) the
          successful negotiation of the algorithm to satisfy the intent of this test.</test>
          <test>The evaluator shall configure an SSH client to only propose the 3des-cbc encryption
          algorithm and no other encryption algorithms. The evaluator shall attempt to establish an
          SSH connection from this client to the TOE server and observe that the connection is
          rejected.</test>
        </testlist>
        </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshs-ext-1e4">
        <title>The SSH server shall ensure that the SSH transport implementation uses 
          <selectables>
            <selectable>ssh-rsa</selectable>
            <selectable>rsa-sha2-256</selectable>
            <selectable>rsa-sha2-512</selectable>
            <selectable>ecdsa-sha2-nistp256</selectable>
          </selectables>
           and 
          <selectables>
            <selectable>ecdsa-sha2-nistp384</selectable>
            <selectable>x509v3-ecdsa-sha2-nistp256</selectable>
            <selectable>x509v3-ecdsa-sha2-nistp384</selectable>
            <selectable>no other public key algorithms</selectable>
          </selectables>
        as its public key algorithm(s) and
        rejects all other public key algorithms.
        </title>
        <note role="application">
          Implementations that select only ssh-rsa will not achieve the 112-bit security strength in the
          digital signature generation for SSH authentication as is recommended in NIST SP 800-131A. 
          
          <!-- SME: should this statement be kept as-is, withdrawn, or incorporated into the SFR? -->
          Future versions of this document may remove ssh-rsa as a
          selection.  
          
          RFC 8332 specifies the use of rsa-sha2-256 or rsa-sha2-512 in SSH.
          <h:p/>
          The SFRs for cryptographic key generation and certificate validation are inherited
          from the PP or PP-Module that includes this Package.
        </note>
        <aactivity>
          <TSS>
            The evaluator shall check the description of the implementation of this protocol
            in the TSS to ensure that it specifies the supported public key algorithms and any optional characteristics. 
            The evaluator shall also check the TSS to ensure that
            the encryption algorithms specified are identical to those listed for this element. 
          </TSS>
          <Guidance>The evaluator shall check the guidance documentation to ensure that it contains
            instructions on configuring the TOE so that SSH conforms to the description in the TSS (for
            instance, the set of algorithms advertised by the TOE may have to be restricted to meet the
            requirements). 
          </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>Using an appropriately configured client, the evaluator shall establish an SSH
          connection using each of the public key algorithms specified by the requirement to
          authenticate to the TOE. It is sufficient to observe (on the wire) the successful negotiation of the
          algorithm to satisfy the intent of this test.</test>
          <test>The evaluator shall configure an SSH client to propose only the ssh-dsa public key
          algorithm and no other public key algorithms. Using this client, the evaluator shall
          attempt to establish an SSH connection to the TOE and observe that the connection is
          rejected.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshs-ext-1e5">
        <title>The SSH server shall ensure that the SSH transport implementation uses 
        <selectables>
          <selectable>hmac-sha1</selectable>
          <selectable>hmac-sha1-96</selectable>
          <selectable>hmac-sha2-256</selectable>
          <selectable>hmac-sha2-512</selectable>
        </selectables>
          and
        <selectables>
          <selectable>AEAD_AES_128_GCM</selectable>
          <selectable>AEAD_AES_256_GCM</selectable>
          <selectable>no other MAC algorithms</selectable>
        </selectables>
        as its MAC algorithm(s) and rejects all
        other MAC algorithm(s).</title>
        <note role="application">
          RFC 5647 specifies the use of the AEAD_AES_128_GCM and AEAD_AES_256_GCM
          algorithms in SSH. As described in RFC 5647, AEAD_AES_128_GCM and
          AEAD_AES_256_GCM can only be chosen as MAC algorithms when the same algorithm is
          being used as the encryption algorithm. RFC 6668 specifies the use of the sha2 algorithms
          in SSH.
          <h:p/>
          The SFRs for cryptographic operations, encryption and hashing, are inherited from the PP or PP-Module that includes this Package.
        </note>
        <aactivity>
          <TSS>
          The evaluator shall check the TSS to ensure that it lists the supported data
        integrity algorithms and that this list corresponds to the list in this element. 
          </TSS>
          <Guidance>The evaluator shall check the guidance documentation to ensure that it includes
        instructions to the administrator on how to ensure that only the allowed data integrity
        algorithms are used in SSH connections with the TOE (specifically, that the “none” and "hmac-md5" MAC
        algorithms are not allowed). 
          </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>Using an appropriately configured client, the evaluator shall establish a SSH
          connection with the TOE using each of the integrity algorithms specified by the requirement. It is
          sufficient to observe (on the wire) the successful negotiation of the algorithm to
          satisfy the intent of the test.</test>
          <test>The evaluator shall configure an SSH client to only propose the “none” MAC
          algorithm. Using this client, the evaluator shall attempt to connect to the TOE and
          observe that the attempt fails.</test>
          <test>The evaluator shall configure an SSH client to only propose the hmac-md5 MAC
          algorithm. Using this client, the evaluator shall attempt to connect to the TOE and
          observe that the attempt fails.</test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshs-ext-1e6">
        <title>The SSH server shall ensure that 
        <selectables>
          <selectable>diffie-hellman-group14-sha1</selectable>
          <selectable>ecdh-sha2-nistp256</selectable>
        </selectables>
          and
        <selectables>
          <selectable>ecdh-sha2-nistp384</selectable>
          <selectable>ecdh-sha2-nistp521</selectable>
          <selectable>no other methods</selectable>
        </selectables>
        are the only allowed key exchange
        methods used for the SSH protocol.</title>
        <aactivity>
          <TSS>The evaluator shall check the TSS to ensure that it lists the supported key
        exchange algorithms and that this list corresponds to the list in this element.
          </TSS>
        <Guidance>
          The evaluator shall check the guidance documentation to ensure that it includes
        instructions to the administrator on how to ensure that only the allowed key exchange
        algorithms are used in SSH connections to the TOE. 
        </Guidance>
          <Tests>
            The evaluator shall perform the following tests:
        <testlist>
          <test>For each of the allowed key exchange methods, the evaluator shall configure an SSH
          client to propose only that method and then attempt to connect to the TOE. The evaluator shall confirm that each attempt
          succeeds.</test>
          <test>The evaluator shall configure an SSH client to only allow the diffie-hellman-group1-sha1
            key exchange. The evaluator shall attempt to use this SSH client to connect to the TOE and confirm that this attempt fails.
            </test>
        </testlist>
          </Tests>
        </aactivity>
      </f-element>
      <f-element id="fcs-sshs-ext-1e7">
        <title>The SSH server shall ensure that the SSH connection be rekeyed after 
          <selectables>
            <selectable>no more than 2<h:sup>28</h:sup> packets have been transmitted</selectable>
            <selectable>no more than 1 gigabyte of data has been transmitted</selectable>
            <selectable>no more than 1 hour</selectable>
          </selectables>
         using that key.</title>
        <aactivity>
          <TSS>
            There are no TSS evaluation activities for this element.
          </TSS>
          <Guidance>
            If the TOE has the ability to generate a log when an SSH rekey occurs, the evaluator shall examine the operational guidance to verify that it describes any configuration that is needed for this to be performed.
          </Guidance>
          <Tests>
            The evaluator shall perform the following test for each rekeying method claimed in the ST:
          <testlist>
            <test>The evaluator shall configure the TOE to create a log entry when a rekey occurs. The evaluator shall then connect to the TOE using an SSH client and cause a rekey to occur according to the selection(s) in the ST.
              The evaluator shall subsequently use available methods and tools to verify that rekeying occurs. This could be done by, for example, checking that a corresponding audit event has been generated by the TOE or by the SSH client, if
              either supports auditing of rekey events.</test>
          </testlist>
          </Tests>
        </aactivity>
      </f-element>
	<audit-event/>
    </f-component>
  </subsection></section></chapter>
  
  <!--<appendix title="Optional Requirements" id="optional">The baseline requirements (those that must
  be performed by the 
  <abbr linkend="TOE" />) are contained in the body of this 
  <abbr linkend="EP" />. Additionally, there are three other types of requirements specified in 
  <appref linkend="optional" />, 
  <appref linkend="sel-based" />, and 
  <appref linkend="objective" />. The first type (in this Appendix) are requirements that can be
  included in the 
  <abbr linkend="ST" />, but are not required in order for products to claim conformance to
  this 
  <abbr linkend="EP" />. The second type (in 
  <appref linkend="sel-based" />) are requirements based on selections in the body of the 
  <abbr linkend="EP" />: if certain selections are made, then additional requirements in that
  appendix must be included. The third type (in 
  <appref linkend="objective" />) are components that are not required in order to conform to this 
  <abbr linkend="EP" />, but will be included in the baseline requirements in future versions of
  this 
  <abbr linkend="EP" />, so adoption by vendors is encouraged. Note that the 
  <abbr linkend="ST" /> author is responsible for ensuring that requirements that may be associated
  with those in 
  <appref linkend="optional" />, 
  <appref linkend="sel-based" />, and 
  <appref linkend="objective" /> but are not listed (e.g., FMT-type requirements) are also included
  in the 
  <abbr linkend="ST" />.
  <h:br />None exists presently.
  </appendix> -->
  
    <appendix id="appendix-optional-plus" title="Optional Requirements">  

    <!-- Contents of the appendix are totally generated by "optional-appendix" xsl template. 
         Includes boilerplate, headers, audit table. So the below is not needed. But there is is. -->
    <!--    <audit-table table="optional">
	  Auditable events for Optional SFRs:<h:br/><h:br/>
	</audit-table>  -->
    </appendix> 

    <!-- Appendix B: Selection-Based -->
    <appendix id="appendix-sel-based" title="Selection-Based Requirements"> 
       
    <!-- Contents of the appendix are totally generated by "optional-appendix" xsl template. 
         Includes boilerplate, headers, audit table. So the below is not needed. But there is is. -->
    <!--    <audit-table table="sel-based">
	  Auditable events for Selecton-based Requirements:	
	</audit-table>   -->
    </appendix> 
	
<!--
  <appendix title="Optional Requirements" id="optional">
    There are currently no Optional Requirements in this Package.
  </appendix>
  
  <appendix title="Selection-Based Requirements" id="sel-based">As indicated in the introduction to this Package, 
    this appendix lists requirements that are activated based on selections made in the PP, PP-Module, or ST, or in other portions of this Package itself.
</appendix>
-->

 <!-- <appendix title="Objective Requirements" id="objective">This Annex includes requirements that
  specify security functionality which also addresses threats. The requirements are not currently
  mandated in the body of this 
  <abbr linkend="EP" /> as they describe security functionality not yet widely-available in
  commercial technology. However, these requirements may be included in the 
  <abbr linkend="ST" /> such that the product is still conformant to this 
  <abbr linkend="EP" />, and it is expected that they be included as soon as possible.
  <h:br/>None exists presently.</appendix> -->
  
<!--  
  <appendix title="Objective Requirements" id="objective">This appendix includes requirements that
    specify security functionality which also addresses threats. The requirements are not currently
    mandated in the body of this Package as they describe security functionality not yet widely-available
    in commercial technology. However, these requirements may be included in the ST such that the
    product is still conformant to this Package, and it is expected that they be included as soon as
    possible. </appendix>
-->
  
  <appendix id="biblio" title="References">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation - <h:ul>
          <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R5.pdf">Part
            1: Introduction and General Model</h:a>, CCMB-2012-09-001, Version 3.1 Revision 5,
            April 2017.</h:li>
          <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R5.pdf">Part
            2: Security Functional Components</h:a>, CCMB-2012-09-002, Version 3.1 Revision 5,
            April 2017.</h:li>
          <h:li><h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R5.pdf">Part
            3: Security Assurance Components</h:a>, CCMB-2012-09-003, Version 3.1 Revision 5,
            April 2017.</h:li>
        </h:ul></description>
      </entry>
      <entry id="bibGPOS">
        <tag>GPOSPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=442">Protection Profile for General 
            Purpose Operating Systems
            </h:a>
        </description>
      </entry>
      <entry id="bibMDM">
        <tag>MDMPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=428">Protection Profile for Mobile 
            Device Management
          </h:a>
        </description>
      </entry>
      <entry id="bibAppPP">
        <tag>AppPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=429">Protection Profile for Application
            Software</h:a>
        </description>
      </entry>
      <entry id="bibVirt">
        <tag>VirtPP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=408">Protection Profile for 
            Virtualization</h:a>
        </description>
      </entry>   
    </bibliography>
  </appendix>
  
  <appendix id="acro" title="Acronyms">
      <acronyms/>
  </appendix>

<!--
  <appendix title="Acronyms" id="acronyms">
    <acronyms>
      <entry>
        <term>AES</term>
        <description>Advanced Encryption Standard</description>
      </entry>
      <entry>
        <term>CBC</term>
        <description>Cipher Block Chaining</description>
      </entry>
      <entry>
        <term>CC</term>
        <description>Common Criteria</description>
      </entry>
      <entry>
        <term>CTR</term>
        <description>Counter (AES mode)</description>
      </entry>
      <entry>
        <term>ECB</term>
        <description>Electronic Codebook</description>
      </entry>
      <entry>
        <term>ECDSA</term>
        <description>Elliptic Curve Digital Signature Algorithm</description>
      </entry>
      <entry>
        <term>GCM</term>
        <description>Galois/Counter Mode</description>
      </entry>
      <entry>
        <term>IETF</term>
        <description>Internet Engineering Task Force</description>
      </entry>
      <entry>
        <term>IV</term>
        <description>Initialization Vector</description>
      </entry>
      <entry>
        <term>MAC</term>
        <description>Message Authentication Code</description>
      </entry>
      <entry>
        <term>NIST</term>
        <description>National Institute of Standards and Technology</description>
      </entry>
      <entry>
        <term>PP</term>
        <description>Protection Profile</description>
      </entry>     
      <entry>
        <term>RFC</term>
        <description>Request for Comment (IETF)</description>
      </entry>
      <entry>
        <term>RSA</term>
        <description>Rivest Shamir Adelman</description>
      </entry>
      <entry>
        <term>SAR</term>
        <description>Security Assurance Requirement</description>
      </entry>
      <entry>
        <term>SFR</term>
        <description>Security Functional Requirement</description>
      </entry>
      <entry>
        <term>SSH</term>
        <description>Secure Shell</description>
      </entry>
      <entry>
        <term>ST</term>
        <description>Security Target</description>
      </entry>
      <entry>
        <term>TOE</term>
        <description>Target of Evaluation</description>
      </entry>
      <entry>
        <term>TSF</term>
        <description>TOE Security Functionality</description>
      </entry>
      <entry>
        <term>TSS</term>
        <description>TOE Summary Specification</description>
      </entry>
    </acronyms>
  </appendix>
-->

</PP>
